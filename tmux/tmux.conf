# Note: bind and bind-key are aliases. They have the same effect.
#       ChatGPT says that bind-key should be used in the conf file
#        while bind should be used directly in tmux itself. But the
#        effect remains the same.

set-option -sa terminal-overrides ",screen-256color:RGB"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-Space
bind-key C-a send-prefix

# settings
# =====================================
set -g base-index         1
set -g pane-base-index    1
set-window-option -g pane-base-index    1
set -g renumber-windows   on
set -g mouse on                    # use mouse to scroll

# keybindings
# =====================================
# split panes using | and -
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key C-e split-window -v -c "#{pane_current_path}" -l 8
unbind '"'
unbind %

# navigate windows 
bind-key -r C-k previous-window
bind-key -r C-j next-window

# navigate panes
# bind -r h select-pane -L      # left pane
# bind -r j select-pane -D      # down pane
# bind -r k select-pane -U      # up pane
# bind -r l select-pane -R      # right pane

# Moving window
bind-key -n C-S-Left swap-window -t -1 \; previous-window # ctrl-shift-s-left
bind-key -n C-S-Right swap-window -t +1 \; next-window    # ctrl-shift-s-right

# create new window and retain cwd (Prefix + a)
bind-key c new-window -c "#{pane_current_path}"

# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Prompt to rename window right after it's created
# -- I don't use this so disabled it as of 2023/05/08
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Reload tmux configuration 
bind-key C-r source-file ~/.tmux.conf \; display "Config reloaded"

# copied from https://github.com/ThePrimeagen/.dotfiles/blob/master/tmux/.tmux.conf
bind-key -r C-f run-shell "tmux neww ~/.config/tmux/tmux-sessionizer"

# use fzf to [s]witch sessions
bind-key C-s display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# use fzf to [e]xit (kill) sessions
# bind-key C-e display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header kill-session |\
#     xargs tmux kill-session -t"

bind-key C-n new-session

# '-E': close the popup after executing the command
# '-B': hide borders
bind-key C-o display-popup -E -B "echo \"list-sessions\nnew-session\nkill-session\nwindow-left\nwindow-right\nreload-config\ntest\" | fzf --header tmux-commands | xargs ~/workspace/dotfiles/tmux/tmux_command.sh"

bind-key C-Space display-menu -y C -x C \
    "list sessions"  "l" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh list-sessions'" \
    "new session"    "n" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh new-session'" \
    "kill session"   "k" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh kill-session'" \
    "rename session" "s" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh rename-session'" \
    "" \
    "rename window" "w" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh rename-window'" \
    "window right"  "1" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh window-right'" \
    "window left"   "2" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh window-left'" \
    "" \
    "reload config" "r" "run-shell '~/workspace/dotfiles/tmux/tmux_command.sh reload-config'" 

# =====================================

# when window has monitoring notification
setw -g monitor-activity on

# =====================================

# List of plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jimeh/tmuxifier'

set -g @plugin 'niksingh710/minimal-tmux-status'

set -g @minimal-tmux-bg "#76946a"
set -g @minimal-tmux-status "bottom"
set -g @minimal-tmux-use-arrow true
set -g @minimal-tmux-right-arrow ""
set -g @minimal-tmux-left-arrow ""
set -g @minimal-tmux-right true
set -g @minimal-tmux-left true
set -g @minimal-tmux-expanded-icon "󰊓 "
set -g @minimal-tmux-status-right-extra " ▊"
set -g @minimal-tmux-status-left-extra ""
set -g @minimal-tmux-indicator-str "▊ tmux  "


# # seps:  █      
# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_right_separator ""
# set -g @catppuccin_window_middle_separator "█ "
# set -g @catppuccin_window_number_position "left"
#
# set -g @catppuccin_window_default_fill "number"
#
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W"
# set -g @catppuccin_window_default_text "#W "
#
# set -g @catppuccin_window_status_icon_enable "yes"
# set -g @catppuccin_status_modules_right "session date_time"
# set -g @catppuccin_status_left_separator "█"
# set -g @catppuccin_status_right_separator ""
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "yes"
#
# set -g @catppuccin_icon_window_last " "


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
