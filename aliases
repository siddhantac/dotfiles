
# list files and dirs
alias ls='exa --icons'
alias ll='ls -lh'
alias la='ll -a'

# sort files by file size
alias lz='la --sort size'

# sort files by modification time
alias lt='la --sort modified'

# count files
alias count='find . -type f | wc -l'

# copy with progress bar
alias cpv='rsync -ah --progress'

# git aliases
alias gs='git status --short'
alias gst='git status'
alias gci='git commit -m'
alias gca='git commit -a -m' 
alias gcm='git commit --amend --no-edit' 
alias gcmm='git commit --amend -m'
alias gbr='git branch'
alias gco='git checkout'
alias gdiff='git diff'
alias gpull='git pull'
alias gll='git log --pretty=format:"%C(yellow)%h%Cred%d %Creset%s%Cgreen [%cn]" --decorate --numstat'
alias glg='git log --pretty=format:"%C(yellow)%h %ad%Cred%d %Creset%s%Cgreen [%cn]" --decorate --date=short --graph'
alias gpu='git push origin $(git rev-parse --abbrev-ref HEAD)'
alias gpun='git push origin $(git rev-parse --abbrev-ref HEAD) --no-verify'
alias gpuu='git push origin --set-upstream $(git rev-parse --abbrev-ref HEAD)'

# git merge: merge current branch to the given branch
gmerge() { 
    branch=$(git rev-parse --abbrev-ref HEAD) && \
    git checkout $1 && \
    git merge $branch
}

# git sync: checkout master, git pull, checkout previous branch
gsync() {
    check_branch=$(git branch | grep master)
    $check_branch
    status=$?
    [ $status -eq 0 ] && main_branch='master'
    [ $status -eq 1 ] && main_branch='main'
    branch=$(git rev-parse --abbrev-ref HEAD) && \
    git checkout $main_branch && \
    git pull --all -p && \
    # git checkout $branch
}

# use grc colorizer
alias go='grc go'

# suffix aliases (just typing the json filename in terminal will open it in vim)
alias -s json=vim

# global alias:
#  replace all occurrences of the alias name with the command
alias -g awsdumcred='AWS_SECRET_ACCESS_KEY=dummy_secret AWS_ACCESS_KEY_ID=dummy_key'

# source the zsh config file
alias sc='source $HOME/.zshrc'
# edit the zsh config file
alias ec='$EDITOR $HOME/.zshrc'

alias d='docker'
alias dps='docker ps'

# docker-compose
alias dc='docker-compose'
alias dco='docker-compose'
alias dcb='docker-compose build'
alias dce='docker-compose exec'
alias dcps='docker-compose ps'
alias dcrestart='docker-compose restart'
alias dcrm='docker-compose rm'
alias dcr='docker-compose run'
alias dcstop='docker-compose stop'
alias dcup='docker-compose up'
alias dcupb='docker-compose up --build'
alias dcupd='docker-compose up -d'
alias dcdn='docker-compose down'
alias dcl='docker-compose logs'
alias dclf='docker-compose logs -f'
alias dcpull='docker-compose pull'
alias dcstart='docker-compose start'
alias dck='docker-compose kill'

# Functions
#--------------------------------
# make dir and cd into it
mdcd() {
  mkdir -p -- "$1" && cd -P -- "$1"
}

# run a specific go test 
# TODO: delete if unused (last checked 8th Feb, 2022)
gtr() {
  go test -v -run $1 $2
}
